@let(lessons = $props.lessons ?? $props.module?.lessons)

<ol class="list-plain mb-3">
  @each (item in lessons)
    @let(progression = progress.post.get(item.id))
    @let(isCurrentLesson = lesson.id === item.id)

    <li 
      data-series-lesson="{{ item.id }}" 
      x-data="{ isCompleted: {{ progression?.isCompleted ?? false }}, id: {{ item.id }}, lessonId: {{ lesson.id }}, itemId: {{ item.id }} }" 
      x-cloak
      @toggle="isCompleted = $event.detail"
      {{ html.attrs({ 'x-init': isCurrentLesson && `$nextTick(() => $el.scrollIntoView({ block: 'center' }))` }) }}>
      <a
        href="{{ item.routeUrl }}"
        class="group/modles text-sm duration-200 pl-1 pr-2 p-1 -mb-px flex items-center gap-3 rounded-md border border-transparent"
        :class="{
          'border-transparent bg-base-100/0 hover:bg-base-100/25 hover:border-primary/25 text-base-content/60 hover:text-base-content': lessonId !== itemId,
          'border-primary/50 bg-primary/25 hover:border-primary text-base-content/80 hover:text-base-content': lessonId === itemId && !isCompleted,
          'border-success/50 bg-success/10 hover:border-success text-base-content/80 hover:text-base-content': lessonId === itemId && isCompleted,
        }">
        <div>
          <div class="w-7 h-7 text-[.6rem] rounded duration-200 flex items-center justify-center" :class="{
            'bg-success/10 group-hover/modles:bg-success text-success group-hover/modles:text-success-content': isCompleted,
            'bg-primary/25 group-hover/modles:bg-primary group-hover/modles:text-primary-content': !isCompleted && id === {{ lesson.id }},
            'bg-base-100 group-hover/modles:bg-primary group-hover/modles:text-primary-content': !isCompleted && id !== {{ lesson.id }}
          }">
            @cannot('PostPolicy.view', item)
              @let(icon = item.paywallTypeId === PaywallTypes.DELAYED_RELEASE ? 'solar:clock-circle-outline' :
              'solar:lock-keyhole-minimalistic-outline')
              
              <div class="text-base-content/40">
                @svg(icon, { class: 'size-4' })
              </div>
            @else
              <template x-if="isCompleted">
                <span>
                  @svg('solar:check-read-outline', { class: 'size-4' })
                </span>
              </template>
              <template x-if="!isCompleted">
                <span>
                  @if (module)
                    {{ module.moduleNumber }}.{{ item.sortOrder }}
                  @else
                    {{ item.rootSortOrder }}
                  @endif
                </span>
              </template>
            @end
          </div>
        </div>

        <div class="flex-1 text-xs">
          {{ item.title }}
        </div>

        <div class="text-2xs opacity-60 group-hover/card:opacity-100 duration-200">
          {{ TimeService.secondsToTimestring(item.videoSeconds) }}
        </div>
      </a>
    </li>
  @endeach
</ol>
