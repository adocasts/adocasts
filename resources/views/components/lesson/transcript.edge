@let(id = $props.id)
@let(cls = $props.class)
@let(scrollAlign = $props.scrollAlign ?? 'center')

<div 
  {{
    html.attrs({
      id,
      class: [cls]
    })
  }}
  x-data="transcript({{ js.stringify({ transcript }) }})" 
  x-show="$store.app.showTranscript"
  x-cloak>
  <h3 class="heading-5 !font-semibold !leading-tight mb-3 px-2">
    Transcript
  </h3>

  <div x-data="seriesCard" class="flex-1 {{ scrollAlign === 'center' ? 'faded-scroll-y to-base-300' : 'faded-scroll-y to-transparent' }}" :style="overflowStyle">
    <ol 
      x-data
      x-init="setActive($store.app.videoTimestamp); $watch('$store.app.videoTimestamp', (value) => setActive(value))"
      class="pb-6 flex-1 list-none m-0 p-0 top-0 left-0 overflow-y-auto" @scroll="handleScroll">
      @each((cue, i) in transcript.cues)
        <li 
          data-timestamp-cue="{{ cue.identifier }}"
          data-scroll-align="{{ scrollAlign }}"
          class="flex flex-col text-left items-start w-full p-2 mb-1 rounded-md transition duration-200 group"
          :class="[{{ cue.start }} === active?.start ? 'active bg-base-200' : 'hover:bg-base-200']">
          <button 
            type="button" 
            x-data 
            @click="window.embed.startAtTime({{ cue.start }})"
            class="w-full text-xs group-hover:text-primary flex items-center justify-between gap-1.5 uppercase tracking-wide mb-1">
            <div class="font-bold">{{ TimeService.secondsToTime(cue.start) }}</div>

            <div x-show.transition="{{ cue.start }} === active?.start && $store.app.videoPlaying"
              class="items-center gap-1.5 flex duration-200 bg-base-200 text-primary rounded-full px-2 text-2xs" x-cloak>
              @svg('svg-spinners:bars-scale')
            </div>
            
            <template x-if="{{ cue.start }} !== active?.start">
              <div
                class="items-center gap-1.5 flex opacity-0 group-hover:opacity-100 duration-300 bg-base-100 rounded-full px-2 text-2xs"
                x-cloak>
                @svg('solar:play-outline')
                <span>Play From Here</span>
              </div>
            </template>
          </button>
          
          <p class="text-[0.825rem] text-base-content/60 group-hover:text-base-content/80 duration-200">
            {{ cue.text }}
          </p>
        </li>
      @endeach
    </ol>
  </div>
</div>