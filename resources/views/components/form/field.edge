@let(value = old(name) || ($props.value ?? ''))
@let(required = $props.required ?? false)
@let(data = { name, value, maxlength, minlength, required })
@assign(el = el || 'label')

@if (!model && (maxlength || minlength))
  @assign(model = 'value')
@endif

@inject({ ...data, model })

<{{ el }} class="flex flex-col mb-3 lg:mb-6 relative {{ $props.class }}" x-data="{{ js.stringify(data) }}">
  @if (label)
    <span class="block text-sm font-semibold leading-6">
      {{ label }}
      @if (required)
        <sup class="text-error">*</sup>
      @endif
    </span>
  @endif

  @if (help)
    <span class="text-xs opacity-60 -mt-1 mb-1">{{ help }}</span>
  @endif

  {{{ await $slots.main() }}}

  <div>
    @if(flashMessages.has(`errors.${name}`))
      @let(message = flashMessages.get(`errors.${name}`))
      <span class="text-xs text-error">{{ Array.isArray(message) ? message.join(', ') : message }}</span>
    @elseif(hint)
      <div class="text-xs text-right pt-1 absolute right-0 opacity-60" style="bottom: -1rem">
        {{ hint }}
      </div>
    @elseif(maxlength)
      <div x-cloak :class="[`text-xs text-right pt-1 absolute right-0 ${value.length >= maxlength ? 'text-error' : 'opacity-60'}`]" style="bottom: -1rem">
        <span x-text="value.length"></span> of <span x-text="maxlength"></span>
      </div>
    @elseif(minlength)
      <div x-cloak x-show="value.length < minlength" class="text-xs text-right pt-1 absolute right-0 opacity-60" style="bottom: -1rem">
        <span x-text="minlength"></span> character minimum
      </div>
    @end
  </div>

  @if ($slots.after)
    {{{ await $slots.after() }}}
  @endif
</{{ el }}>
