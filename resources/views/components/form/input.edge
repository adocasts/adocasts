@let($$props = Object.assign($context, $props))
@let(classes = [
  'input',
  $$props.class || '',
  $$props?.error || flashMessages.get(`errors.${name}`)
    ? 'input-error'
    : ''
])
@let(name = $$props?.name)
@let(internalValue = old(name) || ($$props.value ?? ''))

<span 
  class="{{ html.classNames(classes) }}" 
  x-data="{{ js.stringify({ name, internalValue }) }}"
  {{ 
    html.attrs({
      'x-modelable': $$props?.model && 'internalValue',
      'x-model': $$props?.model
    }) 
  }}
>
  @if ($slots.prefix)
    {{{ await $slots.prefix() }}}
  @endif

  <input 
    x-model="internalValue"

    @if (name)
      name="{{ name }}"
    @endif

    class="grow"

    {{ $props.except(['value', 'name', 'model', 'upSubmit', 'class']).merge({ type: 'text', ...$context }).toAttrs() }} 
  />

  @if ($slots.suffix)
    {{{ await $slots.suffix() }}}
  @endif
</span>
