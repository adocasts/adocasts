@let(progression = progress.post.get(post.id))
@let(progressionColor = 'text-transparent')

@if (progression?.percent > 0 || progression?.isCompleted)
  @assign(progressionColor = progression.isCompleted ? 'bg-success/10 text-success' : 'bg-primary/10 text-primary')
@endif

<div class="card group/card">
  {{-- <div class="card-border"></div> --}}
  <div class="card-body flex-row lg:items-center gap-3 md:gap-6 lg:gap-x-12">
    <div
      class="{{ 
        html.classNames([
          'relative radial-progress bg-transparent opacity-60 text-2xs md:text-xl',
          '[--size:2.5rem] md:[--size:5rem] xl:[--size:6rem] [--thickness:.15rem] md:[--thickness:.3rem] xl:[--thickness:.4rem]', 
          progressionColor
        ]) 
      }}"
      style="--value:{{ progression?.percent ?? 0 }};"
      aria-valuenow="{{ progression?.percent ?? 0 }}"
      role="progressbar">
      @cannot('PostPolicy.view', post)
        @let(icon = post.paywallTypeId === PaywallTypes.DELAYED_RELEASE ? 'solar:clock-circle-outline' : 'solar:lock-keyhole-minimalistic-outline')

        <div class="text-base-content/60">
          @svg(icon, { class: 'size-4 lg:size-6' })
        </div>
      @else
        <span class="text-base-content font-bold proportional-nums relative z-10">
          @if (mod)
            {{ mod.moduleNumber }}.{{ post.sortOrder }}
          @else
            {{ post.rootSortOrder }}
          @endif
        </span>
      @end
    </div>

    {{-- <div class="@md:w-1/2 @lg:w-[260px] pb-0 @md:pr-0">
      @!post.picture({ item: post, class: 'h-full', rounded: 'rounded-base', lazy: lazyItem, preview: true })
    </div> --}}

    <div class="flex-1">
      <h4 class="text-lg -mt-1 font-semibold group-hover/card:text-primary duration-200">
        <a href="{{ post.routeUrl }}" class="link-grow">
          {{ post.title }}
        </a>
      </h4>

      <p class="opacity-60">{{ post.description }}</p>

      <div class="mt-3 flex items-center gap-3">
        <div class="badge badge-sm badge-outline text-base-content/60 group-hover/card:text-base-content duration-200">
          @svg('solar:clock-circle-outline', { class: '-ml-0.5 -my-0.5 opacity-80' })
          {{ TimeService.secondsToTimestring(post.videoSeconds) }}
          @if (progression?.watchSeconds && !progression?.isCompleted)
            @let(remaining = post.videoSeconds - progression.watchSeconds)
            <span class="border-l border-base-100 ml-0.5 pl-1.5">
              <span>{{ TimeService.secondsToTimestring(remaining) }}</span>
              <span>left</span>
            </span> 
          @endif
        </div>

        @if (progression?.isCompleted)
          <div class="badge badge-sm badge-outline badge-success">
            @svg('solar:check-read-linear', { class: '-ml-0.5 -my-0.5 opacity-80' })
            Completed
          </div>
        @endif
      </div>
    </div>
  </div>
</div>
