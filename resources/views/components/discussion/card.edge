@let(show = $props.show ?? false)
@let(commentCount = parseInt(discussion.meta.comments_count))
@let(impressionCount = parseInt(discussion.meta.impressions_count))
@let(viewCount = parseInt(discussion.meta.views_count))
@let(sizes = new Map([
  ['sm', {
    title: 'text-base @xl:text-lg',
    byline: 'text-sm',
  }],
  ['md', {
    title: 'text-xl @xl:text-2xl',
    byline: show ? 'text-lg' : 'text-sm'
  }]
]))

@let(size = sizes.get($props.size ?? 'md'))

@card({ id: `feed_${discussion.id}`, accent: show ? '' : null })
  <div class="card-body flex flex-row flex-wrap gap-6">
    <div class="hidden sm:flex flex-col">
      @profile.link({ user: discussion.author, class: 'h-full' })
        <div class="avatar">
          <div class="w-14 rounded">
            @!user.avatar({ user: discussion.author, loading: 'lazy', alt: discussion.author.handle })
          </div>
        </div>
      @end

      @if (!show && commentCount)
        <div class="flex justify-center h-full mt-2">
          <div class="w-px h-[calc(100%_+_1.25rem)] rounded-full bg-base-content/10"></div>
        </div>
      @endif
    </div>

    <div class="flex-1 max-w-full">
      @if (!show)
        <h2 class="card-title font-bold text-base-title {{ size.title }}">
          <a href="{{ route('discussions.show', { slug: discussion.slug }) }}" class="link-grow">
            {{ discussion.title }}
          </a>
        </h2>
      @endif

      <div class="{{ html.classNames(['flex gap-x-3 items-center mb-3 mt-3 sm:mt-0', size.byline]) }}">
        @profile.link({ user: discussion.author, class: ['flex gap-1', 'items-center'] })
          <div class="avatar mr-1.5 sm:hidden">
            <div class="w-6 rounded">
              @!user.avatar({ user: discussion.author, loading: 'lazy', alt: discussion.author.handle })
            </div>
          </div>

          <span>
            {{ discussion.author.handle }}
          </span>

          @if (!discussion.author.isFreeTier)
            <span class="h-2.5 relative ml-1">
              <img class="h-full" src="/imgs/plus-badge-100.png" alt="Adocasts Plus" />
            </span>
          @endif
        @end

        <span class="text-primary relative">
          @svg('solar:double-alt-arrow-right-broken', { class: 'w-4 h-4' })
        </span>

        <span class="flex-none opacity-60 text-sm">
          <time datetime="{{ discussion.createdAt }}">{{ TimeService.timeago(discussion.createdAt) }}</time>
        </span>
      </div>

      @if (discussion.body)
        @if (show)
          <article class="prose max-w-4xl">
            {{{ await parser.highlight(discussion.body) }}}
          </article>
        @else
          <p class="opacity-60 xl:max-w-4xl">
            {{ string.excerpt(await parser.stripHtml(discussion.body), 240, { completeWords: true }) }}
          </p>
        @endif
      @endif
    </div>

    <div class="w-full">
      <div class="w-full flex items-end gap-4 justify-between text-sm">
        <div class="flex items-center gap-2">
          <div class="w-14 hidden sm:flex justify-center mr-3">
            @if (!show && commentCount)
              <div class="avatar-group -space-x-4">
                @each (comment in discussion.comments.toReversed())
                  <div class="avatar">
                    <div class="w-6">
                      @!user.avatar({ user: comment.author, loading: 'lazy', alt: comment.author.handle })
                    </div>
                  </div>
                @endeach
              </div>
            @endif
          </div>

          @if (!show)
            @tooltip({ text: `${commentCount.toLocaleString()} ${string.pluralize('Reply', commentCount)}`, position: 'bottom' })
              <div class="badge badge-outline text-base-content/60">
                @svg('solar:chat-round-call-outline', { class: '-ml-1 -my-0.5 w-4 h-4' })
                {{ commentCount.toLocaleString() }}
              </div>
            @end
          @endif

          @if (!show)
            @tooltip({ text: `${viewCount.toLocaleString()} ${string.pluralize('Views', viewCount)}`, position: 'bottom' })
              <div class="badge badge-outline text-base-content/60">
                @svg('solar:eye-outline', { class: '-ml-1 -my-0.5 w-4 h-4' })
                {{ viewCount.toLocaleString() }}
              </div>
            @end
          @endif

          @if (show)
            @!frags.discussion.vote({ discussion })
          @endif
        </div>

        <div class="flex items-center justify-end gap-2">
          @if (discussion.solvedAt)
            <div class="btn btn-outline btn-xs !text-success" disabled="disabled">
              Answered
            </div>
          @endif

          @if (discussion.topic)
            <a {{ html.attrs({
              href: route('discussions.index', {}, { qs: { topic: discussion.topic.slug }}),
              class: ['btn btn-outline', show ? 'btn-sm' : 'btn-xs']
            }) }}>
              {{ discussion.topic.name }}
            </a>
          @endif
        </div>
      </div>
    </div>
  </div>
@end
