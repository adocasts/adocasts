@let(options = [{
  name: 'Light',
  value: 'light',
  icon: 'solar:sun-2-outline'
}, {
  name: 'Dark',
  value: 'dark',
  icon: 'solar:moon-outline'
}, {
  name: 'Midnight',
  value: 'midnight',
  icon: 'solar:moon-sleep-outline'
}, {
  name: 'System',
  value: 'system',
  icon: 'solar:settings-outline'
}])
@let(active = options.find(o => o.value === theme) ?? options.at(0))

<div x-data="{ 
  change: (theme) => {
    up.submit('#header-theme-form', { params: { theme } })
    document.documentElement.setAttribute('data-theme', `adocasts-${theme}`)
    window?.updateColorScheme()
  }
}" up-header-theme up-hungry>
  @form({ id: 'header-theme-form', action: form.patch('users.theme'), 'up-target': '[up-header-theme]' })
    <input type="hidden" name="theme" value="{{ theme }}" />

    <div class="dropdown dropdown-end">
      <div tabindex="0" role="button" class="btn btn-toggle btn-primary btn-sm sm:btn-md btn-square">
        @svg(active.icon, { class: 'size-4' })
      </div>
      <ul tabindex="0" class="dropdown-content menu border border-base-100 bg-base-300/95 backdrop-blur-lg rounded-box z-50 w-38 p-2 shadow-sm">
        @each (option in options)
          <li>
            <button {{ html.attrs({ type: 'button', class: ['w-full', { 'menu-active': option.value === theme }] }) }} @click="change('{{ option.value }}')">
              @svg(option.icon, { class: 'size-4' })
              {{ option.name }}
            </button>
          </li>
        @endeach
      </ul>
    </div>
  @end

  @!frags.toaster()
</div>
