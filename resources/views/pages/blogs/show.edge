@layout({
  title: `${blog.page_title ?? blog.title} | Adocasts Blog`,
  meta: {
    url: blog.routeUrl,
    canonical: blog.routeUrl,
    desc: string.excerpt(blog.meta_description ?? blog.description, 180),
    asset: blog.thumbnail,
    index: await bouncer.can('PostPolicy.index', blog)
  }
})
  <main class="container mx-auto">
    @if (blog.hasVideo)
      <div class="p-3 lg:p-6 !pb-0">
        @!lesson.video({ lesson: blog })
      </div>
    @endif

    <div class="max-w-prose mx-auto flex gap-3 lg:gap-6 my-10 lg:my-16">
      <div class="@container flex-1">
        <h1 class="heading-2">
          {{ blog.title }}
        </h1>

        <div class="flex items-center text-sm uppercase gap-2 mb-1 mt-8">
          {{-- @svg('solar:double-alt-arrow-right-broken', { class: 'w-5 h-5 text-primary' }) --}}
          In This Blog
        </div>
        <p class="text-pretty font-medium opacity-60 sm:text-lg mb-8">
          @if (blog.description.startsWith('In this blog,'))
            @let([char, ...desc] = lesson.description.replace('In this blog,', '').trim())

            {{ [char?.toUpperCase(), ...desc].join('') }}
          @else
            {{ blog.description }}
          @endif
        </p>

        @if (blog.author)
          <div {{ html.attrs({ class: ['flex gap-3 lg:gap-3 items-center', { 'border-b border-base-100 pb-8 mb-8': blog.body }] }) }}">
            @profile.link({ user: blog.author, class: 'hidden sm:block' })
              <div class="avatar">
                <div class="w-12 rounded-full">
                  @!user.avatar({ user: blog.author, loading: 'lazy', alt: blog.author.handle })
                </div>
              </div>
            @end

            <dl class="flex lg:ml-3">
              <div class="flex flex-col">
                <dt class="text-xs opacity-60">Created by</dt>
                <dd>
                  @profile.link({ user: blog.author })
                    <span>
                      {{ blog.author.handle }}
                    </span>
                  @end
                </dd>
              </div>

              <div class="flex flex-col pl-3 ml-3 lg:pl-6 lg:ml-6">
                <dt class="text-xs opacity-60">Published</dt>
                <dd>
                  <time datetime="{{ blog.createdAt }}">{{ TimeService.timeago(blog.publishAt) }}</time>
                </dd>
              </div>

              @if (blog.updatedContentAt)
                <div class="flex flex-col pl-3 ml-3 lg:pl-6 lg:ml-6">
                  <dt class="text-xs opacity-60">Last updated</dt>
                  <dd>
                    <time datetime="{{ blog.updatedContentAt }}">{{ TimeService.timeago(blog.updatedContentAt) }}</time>
                  </dd>
                </div>
              @endif
            </dl>
          </div>
        @endif

        @if (blog.body)
          <article id="proseBody" x-data="proseBody" class="prose">
            {{{ await parser.highlight(blog.body) }}}
          </article>
        @endif

        @!lesson.comments({ lesson: blog })
      </div>

    </div>
  </main>

@end
