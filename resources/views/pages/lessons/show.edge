@let(nextLesson = null)
@let(prevLesson = null)

@if (series)
  @assign(nextLesson = GetSeries.nextLesson(series, lesson.id))
  @assign(prevLesson = GetSeries.prevLesson(series, lesson.id))
@endif

@layout({
  title: `${lesson.page_title ?? lesson.title} | Adocasts Lesson`,
  meta: {
    url: lesson.routeUrl,
    canonical: lesson.routeUrl,
    series: series,
    desc: string.excerpt(lesson.meta_description ?? lesson.description, 180),
    asset: lesson.asset,
    index: await bouncer.can('PostPolicy.index', lesson)
  },
  style: `--aside-width: ${lesson.hasVideo ? '325px' : '0'}; --footer-less-width: var(--aside-width);`,
})
  <div class="drawer drawer-end xl:drawer-open">
    <input id="series-details-drawer" type="checkbox" class="drawer-toggle">

    <main {{ html.attrs({ class: ['w-full', lesson.hasVideo ? 'xl:w-[calc(100%_-_var(--aside-width))]' : '' ] }) }}>

      <div class="border-b border-base-content/10">
        <div class="flex items-center justify-between gap-0.5 p-1.5">
          <div class="flex items-center">
            @if (series)
              <a href="{{ route('series.show', { slug: series.slug }) }}" class="btn btn-ghost btn-primary">
                @svg('solar:double-alt-arrow-left-outline', { class: 'w-4 h-4' })
                <span class="hidden sm:inline truncate">
                  {{ series.name }}
                </span>
              </a>
            @else
              <a href="{{ route('lessons.index') }}" class="btn btn-ghost btn-primary" up-back>
                @svg('solar:double-alt-arrow-left-outline', { class: 'w-4 h-4' })
                Go Back
              </a>
            @endif
          </div>

          <div class="flex justify-end items-center">
            <div class="flex items-center justify-end {{ !series ? 'pr-4.5' : '' }}">
              @!frags.lesson.completedToggle({ lesson, series })
              
              @if (lesson.hasVideo)
                @!frags.lesson.autoplayToggle({ lesson })
              @endif

              @!frags.lesson.bookmarkToggle({ lesson })

              @if (lesson.repositoryUrl)
                @tooltip({ text: 'View Lesson Repository', class: 'tooltip-bottom' })
                  <a href="{{ lesson.repositoryUrl }}" class="group/tog btn btn-toggle btn-primary btn-square" up-follow="false" target="_blank">
                    @svg('solar:code-outline', { class: 'w-5 h-5 text-base-content/60 group-hover/tog:text-base-content duration-200' })
                  </a>
                @end
              @endif

              @!frags.lesson.downloadVideo({ lesson })
            </div>

            @if (series)
              <div class="h-5 w-px bg-base-100 mx-3"></div>

              <div class="flex items-center justify-end">
                @tooltip({ text: 'Previous Lesson', class: 'tooltip-bottom' })
                  <a {{ html.attrs({ href: prevLesson?.routeUrl, class: 'btn btn-ghost btn-primary btn-square', disabled: !prevLesson }) }}>
                    @svg('solar:arrow-left-outline', { class: 'w-5 h-5' })
                  </a>
                @end
                @tooltip({ text: 'Next Lesson', class: 'tooltip-bottom' })
                  <a {{ html.attrs({ href: nextLesson?.routeUrl, class: 'btn btn-ghost btn-primary btn-square', disabled: !nextLesson }) }}>
                    @svg('solar:arrow-right-outline', { class: 'w-5 h-5' })
                  </a>
                @end
              </div>

              <div class="h-5 w-px bg-base-100 mx-3 xl:hidden"></div>

              <div class="drawer-content xl:hidden">
                <label for="series-details-drawer" aria-label="open sidebar" class="btn btn-ghost btn-primary btn-square">
                  @svg('solar:list-outline', { class: 'size-5 opacity-80' })
                </label>
              </div>
            @endif
          </div>
        </div>
      </div>

      @if (lesson.hasVideo || await bouncer.cannot('PostPolicy.view', lesson))
        @!lesson.video({ lesson, nextLesson })
      @endif

      <div class="max-w-prose mx-auto flex gap-3 lg:gap-6 px-8 md:px-0 my-10 lg:my-16">
        <div class="@container flex-1">
          <h1 class="heading-2a">
            {{ lesson.title }}
          </h1>

          @if (lesson.author)
            <div class="flex gap-3 lg:gap-3 items-center my-8">
              @profile.link({ user: lesson.author })
                <div class="avatar">
                  <div class="w-10 rounded-full">
                    @!user.avatar({ user: lesson.author, loading: 'lazy', alt: lesson.author.handle })
                  </div>
                </div>
              @end

              <div class="flex flex-col">
                <h5 class="text-xs opacity-60">Published by</h5>
                <div class="flex gap-x-3 items-baseline">
                  @profile.link({ user: lesson.author })
                    <span>
                      {{ lesson.author.handle }}
                    </span>
                  @end

                  <span class="text-primary relative top-[0.25rem]">
                    @svg('solar:double-alt-arrow-right-broken', { class: 'w-4 h-4' })
                  </span>

                  <span class="flex-none opacity-60 text-sm">
                    <time datetime="{{ lesson.createdAt }}">{{ TimeService.timeago(lesson.publishAt) }}</time>
                  </span>
                </div>
              </div>
            </div>
          @endif

          <div class="flex items-center text-sm uppercase gap-2 -ml-7">
            @svg('solar:double-alt-arrow-right-broken', { class: 'w-5 h-5 text-primary' })
            In This Lesson
          </div>
          <p class="text-pretty font-medium opacity-60 sm:text-lg mb-12">
            @if (lesson.description.startsWith('In this lesson,'))
              @let([char, ...desc] = lesson.description.replace('In this lesson,', '').trim())

              {{ [char?.toUpperCase(), ...desc].join('') }}
            @else
              {{ lesson.description }}
            @endif
          </p>

          @if (lesson.body)
            <article id="proseBody" x-data="proseBody" class="prose relative">
              @can('PostPolicy.view', lesson)
                {{{ await parser.highlight(lesson.body) }}}
              @else
                {{{ await parser.getPreview(lesson.body) }}}

                <div class="w-full absolute bottom-0 left-0 h-full bg-gradient-to-b from-base-300/0 via-base-300/75 to-base-300 z-10"></div>
              @endcan
            </article>
          @endif

          @!lesson.comments({ lesson })
        </div>

      </div>
    </main>

    @if (series)
      <aside class="drawer-side !top-16 z-20">
        <label for="series-details-drawer" aria-label="close sidebar" class="drawer-overlay"></label>

        <div class="w-[var(--aside-width)] border-l border-base-100 xl:fixed right-0 top-16 h-[calc(100%_-_4rem)] flex flex-col overflow-hidden bg-base-300 dark:bg-base-300/85 backdrop-blur-md max-lx:shadow-sm">
          <div class="px-6 pt-6 pb-3 group">
            <h3 class="heading-5 !font-semibold !leading-tight !mb-0">
              <a href="{{ route('series.show', { slug: series.slug }) }}">
                {{ series.name }}
              </a>
            </h3>

            <div class="flex items-center gap-3 lg:gap-4 mt-1">
              <div class="flex items-center gap-1 lg:gap-1.5 text-xs">
                @svg('solar:video-library-outline', { class: '-mt-px size-3 opacity-80 group-hover:opacity-100 duration-200' })
                <span class="opacity-60 group-hover:opacity-100 duration-200">
                  {{ series.meta.posts_count }} Lessons
                </span>
              </div>

              <div class="flex items-center gap-1 lg:gap-1.5 text-xs group">
                @svg('solar:clock-circle-outline', { class: 'size-3 opacity-80 group-hover:opacity-100 duration-200' })
                <span class="opacity-60 group-hover:opacity-100 duration-200">
                  {{ TimeService.secondsToTimestring(series.meta.video_seconds_sum) }}
                </span>
              </div>
            </div>
          </div>
          <div x-data="seriesCard" class="flex-1 faded-scroll-y to-base-300" :style="overflowStyle">
            <div class="h-full overflow-y-auto p-3" @scroll="handleScroll">
              @each (module in series.modules)
                <details class="collapse rounded-none group" open>
                  <summary class="collapse-title !p-0 min-h-0 mb-3">
                    <div class="flex items-center gap-4 border-2 border-base-100 p-3 pl-2 rounded-md relative overflow-hidden">
                      @svg('solar:double-alt-arrow-right-broken', { class: 'w-5 h-5 text-primary' })
                      <h5 class="font-semibold text-sm">
                        {{ module.name }}
                      </h5>

                      <div class="absolute -right-1 -top-[10%] h-[120%] font-mono text-7xl font-black pointer-events-none flex items-center justify-start gap-1 opacity-[0.025] dark:opacity-[0.075]">
                        {{ module.moduleNumber }}
                      </div>
                    </div>
                  </summary>

                  <div class="collapse-content !p-0">
                    @!series.list.lessons({ module, lesson })
                  </div>
                </details>
              @endeach

              @!series.list.lessons({ lessons: series.lessons, lesson })
            </div>
          </div>
        </div>
      </aside>
    @endif
  </div>

@end
